/*
让我们定义 dn 为：dn = pn+1 - pn，其中 pi 是第i个素数。显然有 d1=1 且对于n>1有 dn 是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。
现给定任意正整数N (< 105)，请计算不超过N的满足猜想的素数对的个数。
输入格式：每个测试输入包含1个测试用例，给出正整数N。
输出格式：每个测试用例的输出占一行，不超过N的满足猜想的素数对的个数。
输入样例：
20
输出样例：
4
*/

#include <stdio.h>
#include <math.h>

bool isPrime(int i)
{
	for (int j = 2; j <= sqrt(i); j ++)
		if (i%j == 0)
			return false;
	return true;
}

int main()
{
	int N;
	while (scanf("%d", &N) != EOF)
	{
		int res = 0;
		for (int i = 3; i < N-1; i++)
			if (isPrime(i)&&isPrime(i+2))
				res++;
				
		printf("%d\n", res);
	}
	return 0;
}




/*会超时
#include <stdio.h>
#include <math.h>

int main()
{
	int N;
	while (scanf("%d", &N) != EOF)
	{
		int prime[1000];//素数组
		int count = 0;
		int res = 0;
		for (int i = 3; i < N+1; i+=2)
		{
			bool t = true;
			for(int j=3;j<=sqrt(i);j+=2)
				if (i%j == 0)
				{
					t = false;
					break;
				}
			if (t)
				prime[count++] = i;	
		}

		for (int i = 0; i < count - 1; i++)
			if ((prime[i + 1] - prime[i]) == 2)
				res++;

		printf("%d\n", res);
	}
	return 0;
}
*/