/*
旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及坏掉的那些键，打出的结果文字会是怎样？
输入格式：
输入在2行中分别给出坏掉的那些键、以及应该输入的文字。
其中对应英文字母的坏键以大写给出；每段文字是不超过105个字符的串。
可用的字符包括字母[a-z, A-Z]、数字0-9、以及下划线“_”（代表空格）、“,”、“.”、“-”、“+”（代表上档键）。
题目保证第2行输入的文字串非空。
注意：如果上档键坏掉了，那么大写的英文字母无法被打出。
输出格式：
在一行中输出能够被打出的结果文字。如果没有一个字符能被打出，则输出空行。
输入样例：
7+IE.
7_This_is_a_test.
输出样例：
_hs_s_a_tst
*/
/*给一个hash表。用ASCII码表示符号.
'0'-48,
'A'-65,
'_'-95,
','-44,
'.'-46,
'-'-45,
'+'-43,
'a'-97,
'z'-122
*/
//!注意考虑首行无输入
#include <iostream>
#include <string>

using namespace std;

int main()
{
	string bad,str;
	int hash[123] = {0};
	getline(cin, bad);          //首行能输入空行，试试getline（）
	cin >> str;
	if (bad[0]==0)
		cout << str;
	else
	{
		for (int i = 0; bad[i] != 0; i++)
		{
			hash[bad[i]] = 1;
			if (bad[i] >= 'A'&&bad[i] <= 'Z')
				hash[bad[i] + 32] = 1;
			if (bad[i] == '+')
				for (int j = 65; j <= 90; j++)
					hash[j] = 1;
		}

		for (int i = 0; str[i] != 0; i++)
			if (hash[str[i]] == 0)
			{
				cout << str[i];
			}
	}
	
	cout << endl;

	return 0;
}